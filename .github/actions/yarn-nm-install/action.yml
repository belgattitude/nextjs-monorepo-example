########################################################################################
# "yarn install" composite action for yarn 3/4+ and "nodeLinker: node-modules"         #
#--------------------------------------------------------------------------------------#
# Requirement: @setup/node should be run before                                        #
#                                                                                      #
# Usage in workflows steps:                                                            #
#                                                                                      #
#      - name: üì• Monorepo install                                                     #
#        uses: ./.github/actions/yarn-nm-install                                       #
#        with:                                                                         #
#          enable-corepack: false # (default)                                          #
#          cache-install-state: true # (default)                                       #
#          cache-node-modules: true # (default, set false if slower action/cache)      #
#                                                                                      #
# Reference:                                                                           #
#   - latest: https://gist.github.com/belgattitude/042f9caf10d029badbde6cf9d43e400a    #
########################################################################################

name: 'Monorepo install (yarn)'
description: 'Run yarn install with node_modules linker and cache enabled'
inputs:
  enable-corepack:
    description: 'Enable corepack'
    required: false
    default: 'false'
  cache-install-state:
    description: 'Cache yarn install state (invalidated on lock changes)'
    required: false
    default: 'true'
  cache-node-modules:
    description: 'Cache node_modules (invalidated on lock changes)'
    required: false
    default: 'true'
  skip-prisma-postinstall-generate:
    description: 'Avoid prisma to automatically generate schema on postinstall'
    required: false
    default: 'true'
  playwright-skip-browser-download:
    description: 'Avoid playwright to download browsers automatically'
    required: false
    default: '1'

runs:
  using: 'composite'

  steps:
    - name: ‚öôÔ∏è Enable Corepack
      if: ${{ inputs.enable-corepack }} == 'true'
      shell: bash
      run: corepack enable

    - name: ‚öôÔ∏è Expose yarn config as "$GITHUB_OUTPUT"
      id: yarn-config
      shell: bash
      env:
        YARN_ENABLE_GLOBAL_CACHE: 'false'
      run: |
        echo "CACHE_FOLDER=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        echo "CURRENT_NODE_VERSION="node-$(node --version | cut -d . -f 1  | sed 's/[^0-9]*//g')".x" >> $GITHUB_OUTPUT

    - name: ‚ôªÔ∏è Restore yarn cache
      uses: actions/cache@v3
      id: yarn-download-cache
      with:
        path: ${{ steps.yarn-config.outputs.CACHE_FOLDER }}
        key: yarn-download-cache-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}
        restore-keys: |
          yarn-download-cache-

    - name: ‚ôªÔ∏è Restore yarn install state
      if: inputs.cache-install-state == 'true'
      id: yarn-install-state-cache
      uses: actions/cache@v3
      with:
        path: .yarn/ci-cache/
        key: yarn-install-state-cache-${{ runner.os }}-${{ steps.yarn-config.outputs.CURRENT_NODE_VERSION }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}

    - name: ‚ôªÔ∏è Restore node_modules
      if: inputs.cache-node-modules == 'true'
      id: yarn-nm-cache
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: yarn-nm-cache-${{ runner.os }}-${{ steps.yarn-config.outputs.CURRENT_NODE_VERSION }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}

    - name: üì• Install dependencies
      shell: bash
      run: yarn install --immutable --inline-builds
      env:
        # Overrides/align yarnrc.yml options (v3, v4) for a CI context
        YARN_ENABLE_GLOBAL_CACHE: 'false' # Use local cache folder to keep downloaded archives
        YARN_NM_MODE: 'hardlinks-local' # Hardlinks-(local|global) reduces io / node_modules size
        YARN_INSTALL_STATE_PATH: .yarn/ci-cache/install-state.gz # Very small speedup when lock does not change
        # Other environment variables
        HUSKY: '0' # By default do not run HUSKY install
        PRISMA_SKIP_POSTINSTALL_GENERATE: ${{ inputs.skip-prisma-postinstall-generate }}
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: ${{ inputs.playwright-skip-browser-download }}

    - name: üì• Post generate prisma
      if: inputs.skip-prisma-postinstall-generate == 'true'
      shell: bash
      run: yarn workspace @your-org/db-main-prisma run prisma generate
