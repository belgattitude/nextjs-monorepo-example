name: CI-packages

on:
  push:
    branches:
      - dev
      - main
    paths:
      - 'packages/**'
      - 'package.json'
      - 'pnpm*'
      - '.github/**'

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - 'packages/**'
      - 'package.json'
      - 'pnpm*'
      - '.github/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch all git history to allow running "yarn workspaces --since"/"pnpm -F '[origin/main]'"
          # @link https://github.com/actions/checkout#fetch-all-history-for-all-tags-and-branches
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: ðŸ“¥ Monorepo install
        uses: ./.github/actions/pnpm-install

      - name: ðŸ‘€ List changed packages
        run: pnpm list -F "{packages}[origin/main]" -r --depth=-1 --json | jq --raw-output ".[].name"

      - name: Restore packages cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.cache
            ${{ github.workspace }}/**/tsconfig.tsbuildinfo

          key: ${{ runner.os }}-packages-cache-${{ hashFiles('pnpm*.yaml') }}-${{ hashFiles('packages/**.[jt]sx?', 'packages/**.json') }}
          restore-keys: |
            ${{ runner.os }}-packages-cache-${{ hashFiles('pnpm*.yaml') }}-

      - name: Typecheck
        run: |
          pnpm -F "{packages}[origin/main]" -r typecheck

      - name: Linter
        run: |
          pnpm -F "{packages}[origin/main]" -r lint
          pnpm -F "{packages}[origin/main]" -r lint-styles
        env:
          TIMING: '1' # Allows to get output for eslint

      - name: Unit tests changed packages
        run: pnpm -F "{packages}[origin/main]" -r test-unit

      - name: Run build for changed packages
        run: pnpm -F "{packages}[origin/main]" -r build

      - name: Run storybook build for changed packages
        run: pnpm -F "{packages}[origin/main]" -r build-storybook
