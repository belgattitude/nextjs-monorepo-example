name: Release nextjs-app docker

on:
  push:
    branches: [dev, main]
    # Only consider those paths to trigger the action
    paths:
      - 'apps/nextjs-app/**'
      - 'packages/**'
      - 'package.json'
      - '*.lock'
      - '.yarnrc.yml'
      - 'tsconfig.base.json'
      - '.prettier*'
      - '.github/**'

  pull_request:
    types: [opened, synchronize, reopened]
    # Only consider those paths to trigger the action
    paths:
      - 'apps/nextjs-app/**'
      - 'packages/**'
      - 'package.json'
      - '*.lock'
      - '.yarnrc.yml'
      - 'tsconfig.base.json'
      - '.prettier*'
      - '.github/**'

env:
  IMAGE: nextjs-monorepo-example/nextjs-app

permissions:
  contents: read

jobs:
  docker:
    # if main branch not protected
    #if: ${{ github.repository == 'belgattitude/nextjs-monorepo-example' && contains('refs/heads/main',github.ref)}}
    runs-on: ubuntu-latest
    name: Nextjs-app docker build
    defaults:
      run:
        shell: bash
        #working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        # Disabled for now... cheaper to self-host, use github repo or upload
        if: false
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          load: true
          context: './docker'
          # push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          #build-args: |
          #  "DATABASE_FILENAME=data/test.sqlite.db"
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Inspect
        run: |
          docker image inspect ${{ env.IMAGE }}:${{ steps.meta.outputs.version }}

      - name: Debug size
        run: |
          docker save ${{ env.IMAGE }}:${{ steps.meta.outputs.version }} | gzip > ./test.tar.gz
          ls -lah ./test.tar.gz
